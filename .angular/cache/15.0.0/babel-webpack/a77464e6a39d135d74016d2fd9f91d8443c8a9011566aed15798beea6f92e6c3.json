{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/ui.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AddTaskComponent_form_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 1);\n    i0.ɵɵlistener(\"ngSubmit\", function AddTaskComponent_form_0_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onSubmit());\n    });\n    i0.ɵɵelementStart(1, \"div\", 2)(2, \"label\", 3);\n    i0.ɵɵtext(3, \"Task\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function AddTaskComponent_form_0_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.text = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 2)(6, \"label\", 5);\n    i0.ɵɵtext(7, \"Day & time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function AddTaskComponent_form_0_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.day = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 7)(10, \"label\", 8);\n    i0.ɵɵtext(11, \"Set reminder\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function AddTaskComponent_form_0_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.reminder = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(13, \"input\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.text);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.day);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.reminder);\n  }\n}\nexport class AddTaskComponent {\n  constructor(uiService) {\n    this.uiService = uiService;\n    this.onAddTask = new EventEmitter();\n    this.reminder = false;\n    this.subscription = this.uiService.onToggle().subscribe(value => this.showAddTask = value);\n  }\n  onSubmit() {\n    if (!this.text) {\n      alert(`Please add a task!`);\n      return;\n    }\n    if (!this.day) {\n      alert(`Please add a day!`);\n      return;\n    }\n    const newTask = {\n      text: this.text,\n      day: this.day,\n      reminder: this.reminder\n    };\n    this.onAddTask.emit(newTask);\n    this.text = ``;\n    this.day = ``;\n    this.reminder = false;\n  }\n  static #_ = this.ɵfac = function AddTaskComponent_Factory(t) {\n    return new (t || AddTaskComponent)(i0.ɵɵdirectiveInject(i1.UiService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddTaskComponent,\n    selectors: [[\"app-add-task\"]],\n    outputs: {\n      onAddTask: \"onAddTask\"\n    },\n    decls: 1,\n    vars: 0,\n    consts: [[\"action\", \"\", \"class\", \"add-form\", 3, \"ngSubmit\", 4, \"ngIf\"], [\"action\", \"\", 1, \"add-form\", 3, \"ngSubmit\"], [1, \"form-control\"], [\"for\", \"text\"], [\"type\", \"text\", \"name\", \"text\", \"id\", \"text\", \"placeholder\", \"Add task\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"day\"], [\"type\", \"text\", \"name\", \"day\", \"id\", \"day\", \"placeholder\", \"Add day & time\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-control\", \"form-control-check\"], [\"for\", \"reminder\"], [\"type\", \"checkbox\", \"name\", \"reminder\", \"id\", \"reminder\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"value\", \"Save task\", 1, \"btn\", \"btn-block\"]],\n    template: function AddTaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AddTaskComponent_form_0_Template, 14, 3, \"form\", 0);\n      }\n    },\n    dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.CheckboxControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    styles: [\".add-form[_ngcontent-%COMP%]{\\n    margin-bottom: 40px;;\\n}\\n/*# sourceURL=webpack://./src/app/components/add-task/add-task.component.css */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hZGQtdGFzay9hZGQtdGFzay5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksbUJBQW1CO0FBQ3ZCIiwic291cmNlc0NvbnRlbnQiOlsiLmFkZC1mb3Jte1xuICAgIG1hcmdpbi1ib3R0b206IDQwcHg7O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAgB,eAAe;;;;;;;;ICA/DC,+BAA+D;IAAxBA;MAAAA;MAAA;MAAA,OAAYA,gCAAU;IAAA,EAAC;IAC1DA,8BAA0B;IACJA,oBAAI;IAAAA,iBAAQ;IAC9BA,gCAAmF;IAApDA;MAAAA;MAAA;MAAA;IAAA,EAAkB;IAAjDA,iBAAmF;IAEvFA,8BAA0B;IACLA,0BAAU;IAAAA,iBAAQ;IACnCA,gCAAsF;IAAxDA;MAAAA;MAAA;MAAA;IAAA,EAAiB;IAA/CA,iBAAsF;IAE1FA,8BAA6C;IACnBA,6BAAY;IAAAA,iBAAQ;IAC1CA,iCAA4E;IAArCA;MAAAA;MAAA;MAAA;IAAA,EAAsB;IAA7DA,iBAA4E;IAEhFA,6BAA6D;IACjEA,iBAAO;;;;IAXgCA,eAAkB;IAAlBA,qCAAkB;IAInBA,eAAiB;IAAjBA,oCAAiB;IAIRA,eAAsB;IAAtBA,yCAAsB;;;ADDrE,OAAM,MAAOC,gBAAgB;EAQ3BC,YAAoBC,SAAmB;IAAnB,cAAS,GAATA,SAAS;IAPnB,cAAS,GAAqB,IAAIJ,YAAY;IAGxD,aAAQ,GAAY,KAAK;IAKvB,IAAI,CAACK,YAAY,GAAG,IAAI,CAACD,SAAS,CAC/BE,QAAQ,EAAE,CACVC,SAAS,CAAEC,KAAK,IAAI,IAAI,CAACC,WAAW,GAACD,KAAM,CAAC;EACjD;EAEAE,QAAQ;IACN,IAAG,CAAC,IAAI,CAACC,IAAI,EAAC;MACZC,KAAK,CAAC,oBAAoB,CAAC;MAC3B;;IAEF,IAAG,CAAC,IAAI,CAACC,GAAG,EAAC;MACXD,KAAK,CAAC,mBAAmB,CAAC;MAC1B;;IAGF,MAAME,OAAO,GAAC;MACZH,IAAI,EAAC,IAAI,CAACA,IAAI;MACdE,GAAG,EAAE,IAAI,CAACA,GAAG;MACbE,QAAQ,EAAC,IAAI,CAACA;KACf;IAED,IAAI,CAACC,SAAS,CAACC,IAAI,CAACH,OAAO,CAAC;IAE5B,IAAI,CAACH,IAAI,GAAC,EAAE;IACZ,IAAI,CAACE,GAAG,GAAC,EAAE;IACX,IAAI,CAACE,QAAQ,GAAC,KAAK;EAErB;EAAC;qBApCUb,gBAAgB;EAAA;EAAA;UAAhBA,gBAAgB;IAAAgB;IAAAC;MAAAH;IAAA;IAAAI;IAAAC;IAAAC;IAAAC;MAAA;QCV7BtB,oEAcO","names":["EventEmitter","i0","AddTaskComponent","constructor","uiService","subscription","onToggle","subscribe","value","showAddTask","onSubmit","text","alert","day","newTask","reminder","onAddTask","emit","selectors","outputs","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/sooraj/Desktop/angular-intro/src/app/components/add-task/add-task.component.ts","/Users/sooraj/Desktop/angular-intro/src/app/components/add-task/add-task.component.html"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { UiService } from 'src/app/services/ui.service';\nimport {Task} from '../../Task'\n\n@Component({\n  selector: 'app-add-task',\n  templateUrl: './add-task.component.html',\n  styleUrls: ['./add-task.component.css']\n})\nexport class AddTaskComponent {\n  @Output() onAddTask: EventEmitter<Task>=new EventEmitter;\n  text!: string;\n  day!: string;\n  reminder: boolean = false;\n  showAddTask!: boolean;\n  subscription!: Subscription;\n\n  constructor(private uiService:UiService){\n    this.subscription = this.uiService\n      .onToggle()\n      .subscribe((value)=>(this.showAddTask=value))\n  }\n\n  onSubmit(){\n    if(!this.text){\n      alert(`Please add a task!`);\n      return;\n    }\n    if(!this.day){\n      alert(`Please add a day!`);\n      return;\n    }\n\n    const newTask={\n      text:this.text,\n      day: this.day,\n      reminder:this.reminder\n    }\n\n    this.onAddTask.emit(newTask)\n\n    this.text=``;\n    this.day=``;\n    this.reminder=false;\n\n  }\n}\n","<form *ngIf action=\"\" class=\"add-form\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-control\">\n        <label for=\"text\">Task</label>\n        <input type=\"text\" name=\"text\" [(ngModel)]=\"text\" id=\"text\" placeholder=\"Add task\">\n    </div>\n    <div class=\"form-control\">\n        <label for=\"day\">Day & time</label>\n        <input type=\"text\" name=\"day\" [(ngModel)]=\"day\" id=\"day\" placeholder=\"Add day & time\">\n    </div>\n    <div class=\"form-control form-control-check\">\n        <label for=\"reminder\">Set reminder</label>\n        <input type=\"checkbox\" name=\"reminder\" [(ngModel)]=\"reminder\" id=\"reminder\">\n    </div>\n    <input type=\"submit\" value=\"Save task\" class=\"btn btn-block\">\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}