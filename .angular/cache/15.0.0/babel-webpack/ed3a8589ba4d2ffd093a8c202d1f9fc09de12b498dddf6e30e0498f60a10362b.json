{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/task.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../task-item/task-item.component\";\nfunction TasksComponent_app_task_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-task-item\", 1);\n    i0.ɵɵlistener(\"onDeleteTask\", function TasksComponent_app_task_item_1_Template_app_task_item_onDeleteTask_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const task_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteTask(task_r1));\n    })(\"onToggleReminder\", function TasksComponent_app_task_item_1_Template_app_task_item_onToggleReminder_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const task_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.toggleReminder(task_r1));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"task\", task_r1);\n  }\n}\nexport class TasksComponent {\n  constructor(taskService) {\n    this.taskService = taskService;\n    this.tasks = [];\n  }\n  ngOnInit() {\n    this.taskService.getTasks().subscribe(tasks => this.tasks = tasks);\n  }\n  deleteTask(task) {\n    this.taskService.deleteTask(task).subscribe(() => this.tasks = this.tasks.filter(t => t.id !== task.id));\n  }\n  toggleReminder(task) {\n    task.reminder = !task.reminder;\n    console.log(task.reminder);\n    this.taskService.updateReminder(task).subscribe();\n  }\n  static #_ = this.ɵfac = function TasksComponent_Factory(t) {\n    return new (t || TasksComponent)(i0.ɵɵdirectiveInject(i1.TaskService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TasksComponent,\n    selectors: [[\"app-tasks\"]],\n    decls: 2,\n    vars: 1,\n    consts: [[3, \"task\", \"onDeleteTask\", \"onToggleReminder\", 4, \"ngFor\", \"ngForOf\"], [3, \"task\", \"onDeleteTask\", \"onToggleReminder\"]],\n    template: function TasksComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0, \"app-add\\n\");\n        i0.ɵɵtemplate(1, TasksComponent_app_task_item_1_Template, 1, 1, \"app-task-item\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.TaskItemComponent],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;;IACAA,wCAC8C;IADUA;MAAA;MAAA;MAAA;MAAA,OAAgBA,yCAAgB;IAAA,EAAC;MAAA;MAAA;MAAA;MAAA,OACjEA,6CAAoB;IAAA,EAD6C;IAC3CA,iBAAgB;;;;IADpBA,8BAAa;;;ACSvD,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAF/B,UAAK,GAAW,EAAE;EAE8B;EAChDC,QAAQ;IACN,IAAI,CAACD,WAAW,CACbE,QAAQ,EAAE,CACVC,SAAS,CACPC,KAAK,IAAK,IAAI,CAACA,KAAK,GAAGA,KAAK,CAC9B;EACL;EAEAC,UAAU,CAACC,IAAU;IACnB,IAAI,CAACN,WAAW,CACbK,UAAU,CAACC,IAAI,CAAC,CAChBH,SAAS,CACR,MAAM,IAAI,CAACC,KAAK,GAAG,IAAI,CAACA,KAAK,CAACG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKH,IAAI,CAACG,EAAE,CAAC,CAC5D;EACL;EAEAC,cAAc,CAACJ,IAAU;IAEvBA,IAAI,CAACK,QAAQ,GAAC,CAACL,IAAI,CAACK,QAAQ;IAC5BC,OAAO,CAACC,GAAG,CAACP,IAAI,CAACK,QAAQ,CAAC;IAC1B,IAAI,CAACX,WAAW,CACbc,cAAc,CAACR,IAAI,CAAC,CACpBH,SAAS,EAAE;EAChB;EAAC;qBA3BUL,cAAc;EAAA;EAAA;UAAdA,cAAc;IAAAiB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDV3BtB,yBACA;QAAAA,mFAC8D;;;QAD9BA,eAAQ;QAARA,mCAAQ","names":["i0","TasksComponent","constructor","taskService","ngOnInit","getTasks","subscribe","tasks","deleteTask","task","filter","t","id","toggleReminder","reminder","console","log","updateReminder","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/sooraj/Desktop/angular-intro/src/app/components/tasks/tasks.component.html","/Users/sooraj/Desktop/angular-intro/src/app/components/tasks/tasks.component.ts"],"sourcesContent":["app-add\n<app-task-item *ngFor=\"let task of tasks\" [task]=\"task\" (onDeleteTask)=\"deleteTask(task)\"\n    (onToggleReminder)=\"toggleReminder(task)\"></app-task-item>","import { Component } from '@angular/core';\nimport { TaskService } from '../../services/task.service';\n// import {TASKS} from '../mock-tasks'\nimport { Task } from '../../Task'\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent {\n  tasks: Task[] = [];\n\n  constructor(private taskService: TaskService) { }\n  ngOnInit(): void {\n    this.taskService\n      .getTasks()\n      .subscribe(\n        (tasks) => this.tasks = tasks\n      );\n  }\n\n  deleteTask(task: Task) {\n    this.taskService\n      .deleteTask(task)\n      .subscribe(\n        () => this.tasks = this.tasks.filter(t => t.id !== task.id)\n      );\n  }\n\n  toggleReminder(task: Task) {\n    \n    task.reminder=!task.reminder;\n    console.log(task.reminder)\n    this.taskService\n      .updateReminder(task)\n      .subscribe();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}